// также включается НАШ
// заголовочный файл
#include "timedat2.h"

// конструктор для класса DataTime
DataTime::DataTime(){
// все атрибуты ставим в 0
   ctm = 0;
   nanos = 0;
   bzero(&tmdat,sizeof(struct tm));
};


// получение даты из строки
void DataTime::getData(char* s){
   int y,mon,day,h,min,sec;
//здесь удобнее разобрать строку sscanfом
   sscanf(s,"%d-%d-%d %d:%d:%d.%d",&y,&mon,&day,&h,&min,&sec,&nanos);
// год в структуре хранится начиная с 1900, поэтому его нужно вычесть
   tmdat.tm_year = y - 1900;
// месяцы начинаюс 0
   tmdat.tm_mon = mon - 1;
   tmdat.tm_mday = day;
// наше время отличается на 3 часа
// (есть проблемы с летним европейским временем)
   tmdat.tm_hour = h + 3;
   tmdat.tm_min = min;
   tmdat.tm_sec = sec;
// преобрзование заполненной структуры в
// секунду. Заодно вычисляются и заполняются
// оставленные нами поля tmdat (см. man)
   ctm = mktime(&tmdat);

};

// получение даты секунды и наносекунды
DataTime::DataTime(time_t a, int nn){
   ctm = a;
   nanos = nn;
};

// Вычитание двух дат. Сложение двух дат в таком формате
// бессмысленно.
// Результатом сложения явлется объект CTime - разница времен
CTime DataTime::operator-(const DataTime& a){
   CTime tmp; // для возврата
// вычисляем разницу в секундах
   time_t sec = ctm - a.ctm - 1;
   int nn = 1000 + nanos - a.nanos;

// задаем время для объекта CTime секундами и наносекундами
// к полям ctm и nanos класса CTime
// функции класса DataTime доступа не имеют!!
   tmp.getTime(sec + nn / 1000, nn % 1000);
// возвращаем объект
        return tmp;
};

// Печать даты в удобном виде
void DataTime::print(){
// временная структура
  struct tm tmp;
// строка ддля представления даты
  char buffer[100];

// заполнение временной структуры
// обычно localtime создает динамическую
// переменную и возвращает указатель  на нее.
// Таким образом все функции времени работатют с
// этой переменной (статическая).
// Для этой задачи нужна локальная переменная,
// поэтому сразу получаем ЗНАЧЕНИЕ
   tmp = *localtime(&ctm);
// получение текстовой строки с датой в нужном формате
   strftime (buffer,80,"%y-%m-%d %X",&tmp);
// печать результата
   printf("%s.%d\n",buffer,nanos);
};
